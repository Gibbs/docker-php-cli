name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - 'master'
  schedule:
    - cron: '0 7 * * *'

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-20.04
    outputs:
      build-date: ${{ steps.set-build-date.outputs.build-date }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2

      - id: set-build-date
        run: echo "::set-output name=build-date::$(echo $(date -u "+%Y%m%dT%H%M%SZ"))"

      - id: set-matrix
        run: |
          JSON=$(echo $(cat .github/workflows/php-matrix.json))
          echo "::set-output name=matrix::$JSON"

  lint:
    name: Lint Dockerfile
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile

  build-test:
    name: Docker Build Test
    needs: setup
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        versions: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: false
          build-args: |
            DEBIAN_CODENAME=${{ matrix.versions.debian_codename }}
            PHP_PACKAGES=${{ matrix.versions.php_packages }}
          tags: |
            php-cli:${{ matrix.versions.php_version }}

      - name: Run image
        id: run-image
        run: >
          echo "::set-output name=php-version::$(docker run -t php-cli:${{ matrix.versions.php_version }} | grep ^PHP | cut -d' ' -f2)"

      - name: Test container output
        if: contains(steps.run-image.outputs.php-version, matrix.versions.php_version) == 'false'
        run: exit 1

  release:
    name: Release
    runs-on: ubuntu-20.04
    needs: [setup, build-test]
    if: github.ref == 'refs/heads/master'
    strategy:
      matrix:
        versions: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            DEBIAN_CODENAME=${{ matrix.versions.debian_codename }}
            PHP_PACKAGES=${{ matrix.versions.php_packages }}
          tags: |
            genv/php-cli:${{ matrix.versions.php_version }}
            genv/php-cli:${{ matrix.versions.php_version }}-${{ needs.setup.outputs.build-date }}
            genv/php-cli:latest
